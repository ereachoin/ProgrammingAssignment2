load("C:/Users/Yiling/Desktop/Coursera/.RData")
getwd()
new[47,]
new[[152:153]]
new[152:153]
new[c(152:153)]
readLines(new,152)
new[152,]
new[47,1]
df<-data.frame(new)
readLines(df,1)
df[1,]
row.names(df)
column.names(df)
df[152:153,]
new<-is.na(df)
new
sum(!new)
sum(!new==TRUE)
as.numeric(new)
sum(!new)
sum(as.numeric(new))
new<-is.na(df)
new<-new[,1]
new
sum(as.numeric(new))
new<-df[,1]
bad<-is.na(new)
new
new[!bad]
mean[new[!bad]]
mean(new[!bad])
subset<-subset(df,"Ozone">31& "Temp">90)
subset
colClasses(df)
colClass(df)
class<-colClasses(df)
class<-sapply(df,class)
class
new<-subset(df,"Ozone">31&"Temp">90)
new<-subset(df,"Ozone">31)
new
> new<-subset(df,df$Ozone>31&df$Temp>90)
new<-subset(df,df$Ozone>31&df$Temp>90)
new
mean(new[df[,2]])
mean(new[,2])
new<-subset(df,df$Month==6)
new
mean(new[,4])
new<-subset(df,df$Month==5)
max(new[,1])
new
write.csv(x,file="newquiz1.csv")
write.csv(new,file="quiz1new.csv")
getwd()
new<-complete.cases(new)
new
good<-complete.cases(df)
df[good]
df[complete.cases(df),]
new<-df[complete.cases(df),]
new
row.names(new)
row.names<-1:111
row.names(new)<-1:111
new
add2<-function(x,y){
x+y
}
add2(1,2)
search()
library()
search()
rnorm(10)
rnorm(1)
rnorm(1)
pnorm(o)
pnorm(0)
pnorm(1,mean=1)
dnorm(0)
mapply(rep,1:4,4:1)
mapply(rep,1:4)
library(datasets)
data(iris)
?iris
iris(versicolor)
iris
x<-iris[,Species==virginica]
x<-iris[,"Species"=="virginica"]
lapply(x,mean)
x
colMeans(x)
x<-iris[,iris$Species=="virginica"]
x<-iris[,iris$Species == virginica]
name(iris)
colClasses(iris)
x<-iris[,c(1,5)]
x
y<-subset(x,x$Species==virginica)
y<-subset(x,x$Species=="virginica")
y
mean(iris)
lapply(y,mean)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
debug(ls)
ls
?ls
debug(ls)
ls
n
debug(lm)
lm(x-y)
debug(ls)
ls
debug(ls)
ls()
mtcars
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(1:5)
makeVector(1:5,2:5)
makeVector(1:5)$getmean
makeVector(x=1:5,mean=3)
setwd("C:/Users/Yiling/coursera/ProgrammingAssignment2")
source(cachematrix.R)
source("cachematrix.R")
m <- matrix(c(-1, -2, 1, 1), 2,2)
x <- makeCacheMatrix(m)
x$get
a<- matrix(c(-1, -2, 1, 1), 2,2)
b <- makeCacheMatrix(a)
b$get
cacheSolve(b)
b$get()
m <- matrix(c(-1, -2, 1, 1,2,5), 3,2)
det(m)
source("cachematrix.R")
a <- matrix(1:9, 3)
b <- makeCacheMatrix(a)
b$get()
cachesolve(b)
cacheSolve(b)
source("cachematrix.R")
a <- matrix(1:9, 3)
b <- makeCacheMatrix(a)
b$get()
cacheSolve(b)
